//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GoodsInShop", "ContractorContractorType", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeWorkCSharp.DataAccessLayer.Contractor), "ContractorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeWorkCSharp.DataAccessLayer.ContractorType), true)]
[assembly: EdmRelationshipAttribute("GoodsInShop", "GoodsRecordsContractor", "GoodsRecords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeWorkCSharp.DataAccessLayer.GoodsRecords), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HomeWorkCSharp.DataAccessLayer.Contractor), true)]
[assembly: EdmRelationshipAttribute("GoodsInShop", "GoodsRecordsGoodsRecordsType", "GoodsRecords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeWorkCSharp.DataAccessLayer.GoodsRecords), "GoodsRecordsType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeWorkCSharp.DataAccessLayer.GoodsRecordsType), true)]
[assembly: EdmRelationshipAttribute("GoodsInShop", "GoodsRecordsGoodsDescription", "GoodsRecords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeWorkCSharp.DataAccessLayer.GoodsRecords), "GoodsDescription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeWorkCSharp.DataAccessLayer.GoodsDescription), true)]

#endregion

namespace HomeWorkCSharp.DataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GoodsInShopContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GoodsInShopContainer object using the connection string found in the 'GoodsInShopContainer' section of the application configuration file.
        /// </summary>
        public GoodsInShopContainer() : base("name=GoodsInShopContainer", "GoodsInShopContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GoodsInShopContainer object.
        /// </summary>
        public GoodsInShopContainer(string connectionString) : base(connectionString, "GoodsInShopContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GoodsInShopContainer object.
        /// </summary>
        public GoodsInShopContainer(EntityConnection connection) : base(connection, "GoodsInShopContainer")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoodsDescription> GoodsDescription
        {
            get
            {
                if ((_GoodsDescription == null))
                {
                    _GoodsDescription = base.CreateObjectSet<GoodsDescription>("GoodsDescription");
                }
                return _GoodsDescription;
            }
        }
        private ObjectSet<GoodsDescription> _GoodsDescription;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contractor> Contractor
        {
            get
            {
                if ((_Contractor == null))
                {
                    _Contractor = base.CreateObjectSet<Contractor>("Contractor");
                }
                return _Contractor;
            }
        }
        private ObjectSet<Contractor> _Contractor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoodsRecords> GoodsRecords
        {
            get
            {
                if ((_GoodsRecords == null))
                {
                    _GoodsRecords = base.CreateObjectSet<GoodsRecords>("GoodsRecords");
                }
                return _GoodsRecords;
            }
        }
        private ObjectSet<GoodsRecords> _GoodsRecords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorType> ContractorType
        {
            get
            {
                if ((_ContractorType == null))
                {
                    _ContractorType = base.CreateObjectSet<ContractorType>("ContractorType");
                }
                return _ContractorType;
            }
        }
        private ObjectSet<ContractorType> _ContractorType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoodsRecordsType> GoodsRecordsType
        {
            get
            {
                if ((_GoodsRecordsType == null))
                {
                    _GoodsRecordsType = base.CreateObjectSet<GoodsRecordsType>("GoodsRecordsType");
                }
                return _GoodsRecordsType;
            }
        }
        private ObjectSet<GoodsRecordsType> _GoodsRecordsType;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoodsDescription EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoodsDescription(GoodsDescription goodsDescription)
        {
            base.AddObject("GoodsDescription", goodsDescription);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contractor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractor(Contractor contractor)
        {
            base.AddObject("Contractor", contractor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoodsRecords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoodsRecords(GoodsRecords goodsRecords)
        {
            base.AddObject("GoodsRecords", goodsRecords);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorType(ContractorType contractorType)
        {
            base.AddObject("ContractorType", contractorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoodsRecordsType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoodsRecordsType(GoodsRecordsType goodsRecordsType)
        {
            base.AddObject("GoodsRecordsType", goodsRecordsType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodsInShop", Name="Contractor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contractor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contractor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="contractorTypeId">Initial value of the ContractorTypeId property.</param>
        public static Contractor CreateContractor(global::System.Int32 id, global::System.String name, global::System.Int32 contractorTypeId)
        {
            Contractor contractor = new Contractor();
            contractor.Id = id;
            contractor.Name = name;
            contractor.ContractorTypeId = contractorTypeId;
            return contractor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true, "EMail");
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorTypeId
        {
            get
            {
                return _ContractorTypeId;
            }
            set
            {
                OnContractorTypeIdChanging(value);
                ReportPropertyChanging("ContractorTypeId");
                _ContractorTypeId = StructuralObject.SetValidValue(value, "ContractorTypeId");
                ReportPropertyChanged("ContractorTypeId");
                OnContractorTypeIdChanged();
            }
        }
        private global::System.Int32 _ContractorTypeId;
        partial void OnContractorTypeIdChanging(global::System.Int32 value);
        partial void OnContractorTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodsInShop", "ContractorContractorType", "ContractorType")]
        public ContractorType ContractorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("GoodsInShop.ContractorContractorType", "ContractorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("GoodsInShop.ContractorContractorType", "ContractorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorType> ContractorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("GoodsInShop.ContractorContractorType", "ContractorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorType>("GoodsInShop.ContractorContractorType", "ContractorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodsInShop", "GoodsRecordsContractor", "GoodsRecords")]
        public EntityCollection<GoodsRecords> GoodsRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsRecords>("GoodsInShop.GoodsRecordsContractor", "GoodsRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsRecords>("GoodsInShop.GoodsRecordsContractor", "GoodsRecords", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodsInShop", Name="ContractorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ContractorType CreateContractorType(global::System.Int32 id, global::System.String value)
        {
            ContractorType contractorType = new ContractorType();
            contractorType.Id = id;
            contractorType.Value = value;
            return contractorType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodsInShop", "ContractorContractorType", "Contractor")]
        public EntityCollection<Contractor> Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("GoodsInShop.ContractorContractorType", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("GoodsInShop.ContractorContractorType", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodsInShop", Name="GoodsDescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoodsDescription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoodsDescription object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currentPrice">Initial value of the CurrentPrice property.</param>
        public static GoodsDescription CreateGoodsDescription(global::System.Int32 id, global::System.String name, global::System.Decimal currentPrice)
        {
            GoodsDescription goodsDescription = new GoodsDescription();
            goodsDescription.Id = id;
            goodsDescription.Name = name;
            goodsDescription.CurrentPrice = currentPrice;
            return goodsDescription;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CurrentPrice
        {
            get
            {
                return _CurrentPrice;
            }
            set
            {
                OnCurrentPriceChanging(value);
                ReportPropertyChanging("CurrentPrice");
                _CurrentPrice = StructuralObject.SetValidValue(value, "CurrentPrice");
                ReportPropertyChanged("CurrentPrice");
                OnCurrentPriceChanged();
            }
        }
        private global::System.Decimal _CurrentPrice;
        partial void OnCurrentPriceChanging(global::System.Decimal value);
        partial void OnCurrentPriceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodsInShop", "GoodsRecordsGoodsDescription", "GoodsRecords")]
        public EntityCollection<GoodsRecords> GoodsRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsRecords>("GoodsInShop.GoodsRecordsGoodsDescription", "GoodsRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsRecords>("GoodsInShop.GoodsRecordsGoodsDescription", "GoodsRecords", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodsInShop", Name="GoodsRecords")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoodsRecords : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoodsRecords object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="goodsRecordsTypeId">Initial value of the GoodsRecordsTypeId property.</param>
        /// <param name="goodsDescriptionId">Initial value of the GoodsDescriptionId property.</param>
        public static GoodsRecords CreateGoodsRecords(global::System.Int32 id, global::System.Int32 amount, global::System.Int32 goodsRecordsTypeId, global::System.Int32 goodsDescriptionId)
        {
            GoodsRecords goodsRecords = new GoodsRecords();
            goodsRecords.Id = id;
            goodsRecords.Amount = amount;
            goodsRecords.GoodsRecordsTypeId = goodsRecordsTypeId;
            goodsRecords.GoodsDescriptionId = goodsDescriptionId;
            return goodsRecords;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActionPrice
        {
            get
            {
                return _ActionPrice;
            }
            set
            {
                OnActionPriceChanging(value);
                ReportPropertyChanging("ActionPrice");
                _ActionPrice = StructuralObject.SetValidValue(value, "ActionPrice");
                ReportPropertyChanged("ActionPrice");
                OnActionPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActionPrice;
        partial void OnActionPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnActionPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActionDateTime
        {
            get
            {
                return _ActionDateTime;
            }
            set
            {
                OnActionDateTimeChanging(value);
                ReportPropertyChanging("ActionDateTime");
                _ActionDateTime = StructuralObject.SetValidValue(value, "ActionDateTime");
                ReportPropertyChanged("ActionDateTime");
                OnActionDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActionDateTime;
        partial void OnActionDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnActionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorId
        {
            get
            {
                return _ContractorId;
            }
            set
            {
                OnContractorIdChanging(value);
                ReportPropertyChanging("ContractorId");
                _ContractorId = StructuralObject.SetValidValue(value, "ContractorId");
                ReportPropertyChanged("ContractorId");
                OnContractorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorId;
        partial void OnContractorIdChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoodsRecordsTypeId
        {
            get
            {
                return _GoodsRecordsTypeId;
            }
            set
            {
                OnGoodsRecordsTypeIdChanging(value);
                ReportPropertyChanging("GoodsRecordsTypeId");
                _GoodsRecordsTypeId = StructuralObject.SetValidValue(value, "GoodsRecordsTypeId");
                ReportPropertyChanged("GoodsRecordsTypeId");
                OnGoodsRecordsTypeIdChanged();
            }
        }
        private global::System.Int32 _GoodsRecordsTypeId;
        partial void OnGoodsRecordsTypeIdChanging(global::System.Int32 value);
        partial void OnGoodsRecordsTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoodsDescriptionId
        {
            get
            {
                return _GoodsDescriptionId;
            }
            set
            {
                OnGoodsDescriptionIdChanging(value);
                ReportPropertyChanging("GoodsDescriptionId");
                _GoodsDescriptionId = StructuralObject.SetValidValue(value, "GoodsDescriptionId");
                ReportPropertyChanged("GoodsDescriptionId");
                OnGoodsDescriptionIdChanged();
            }
        }
        private global::System.Int32 _GoodsDescriptionId;
        partial void OnGoodsDescriptionIdChanging(global::System.Int32 value);
        partial void OnGoodsDescriptionIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodsInShop", "GoodsRecordsContractor", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("GoodsInShop.GoodsRecordsContractor", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("GoodsInShop.GoodsRecordsContractor", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("GoodsInShop.GoodsRecordsContractor", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("GoodsInShop.GoodsRecordsContractor", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodsInShop", "GoodsRecordsGoodsRecordsType", "GoodsRecordsType")]
        public GoodsRecordsType GoodsRecordsType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsRecordsType>("GoodsInShop.GoodsRecordsGoodsRecordsType", "GoodsRecordsType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsRecordsType>("GoodsInShop.GoodsRecordsGoodsRecordsType", "GoodsRecordsType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoodsRecordsType> GoodsRecordsTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsRecordsType>("GoodsInShop.GoodsRecordsGoodsRecordsType", "GoodsRecordsType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoodsRecordsType>("GoodsInShop.GoodsRecordsGoodsRecordsType", "GoodsRecordsType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodsInShop", "GoodsRecordsGoodsDescription", "GoodsDescription")]
        public GoodsDescription GoodsDescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsDescription>("GoodsInShop.GoodsRecordsGoodsDescription", "GoodsDescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsDescription>("GoodsInShop.GoodsRecordsGoodsDescription", "GoodsDescription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoodsDescription> GoodsDescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsDescription>("GoodsInShop.GoodsRecordsGoodsDescription", "GoodsDescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoodsDescription>("GoodsInShop.GoodsRecordsGoodsDescription", "GoodsDescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodsInShop", Name="GoodsRecordsType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoodsRecordsType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoodsRecordsType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static GoodsRecordsType CreateGoodsRecordsType(global::System.Int32 id, global::System.String value)
        {
            GoodsRecordsType goodsRecordsType = new GoodsRecordsType();
            goodsRecordsType.Id = id;
            goodsRecordsType.Value = value;
            return goodsRecordsType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodsInShop", "GoodsRecordsGoodsRecordsType", "GoodsRecords")]
        public EntityCollection<GoodsRecords> GoodsRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsRecords>("GoodsInShop.GoodsRecordsGoodsRecordsType", "GoodsRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsRecords>("GoodsInShop.GoodsRecordsGoodsRecordsType", "GoodsRecords", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
